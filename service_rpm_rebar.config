%% -*- mode: erlang -*-
{ plugins, [
    { rebar3_build_rpm,
      { git,
        "git@github.com:openx/rebar3_build_rpm.git",
        {tag, "0.0.8"}
      }
    }
  ]
}.

{erl_opts, [debug_info]}.

{ deps,
  [
    %%-%- Some useful COMMON dependencies
    { lager, {git, "git@github.com:basho/lager.git", {tag, "2.0.1"}} },
    { syslog, {git, "git@github.com:Vagabond/erlang-syslog.git", {tag, "1.0.5"}} },
    { lager_syslog, {git, "git@github.com:basho/lager_syslog.git", {tag, "2.0.1"}} },
    { recon, {git, "git@github.com:ferd/recon.git", {tag, "2.3.1"}} },
    { cecho, {git, "git@github.com:mazenharake/cecho.git", {tag, "0.5.1"}} },
    { entop, {git, "git@github.com:mazenharake/entop.git", {tag, "0.3.0"}} }

    %% TODO: put the dependencies for you service, as well as adding the
    %% applications below
  ]
}.

%% by default when using the prod profile, include the erlang runtime system
%% (erts) when packaging.  This means you don't need erlang installed as a
%% separate package
{profiles, [{prod, [{relx, [{dev_mode, false},
                            {include_erts, true}
                           ]}]
            }]
}.

{relx, [
    %% the second tuple here has some effect on the final packaging, as the
    %% first element (the release name) will be the location of the
    %% code/erts/etc, the second element is used for the package version.
    %% when releasing a new version of a package you should bump the version
    %% here, and commit, then tag and release from the tag if possible.
    %% TODO: manage version here
    { release, { '{{name}}', "0.1.0" },
      [
        %%-%- START SERVICE APPLICATIONS

        %% TODO: add your service's applications here

        %%-%- END SERVICE APPLICATIONS

        %%-%- COMMON APPLICATIONS
        sasl,
        syslog,
        lager_syslog,
        lager,
        recon,
        {cecho, none}, % prevent cecho and entop from being loaded
        {entop, none}
        %%-%- COMMON APPLICATIONS
      ]
    },

    { sys_config, "./config/sys.config" },
    { vm_args, "./config/vm.args" },

    { dev_mode, true },
    { include_erts, false },

    { extended_start_script, true },
    { extended_start_script_hooks, [ { post_start, [ wait_for_vm_start ] } ] },

    { overlay_vars, "vars.config" },
    %% the way that overlays work with the rebar3_build_rpm plugin is that
    %% any files created in the release under the 'slash' directory will
    %% be copied out of the 'slash' directory into '/' in the final rpm.
    %% Additionally, the release itself will be placed under
    %% /usr/lib64/{{name}}
    %% unless the prefix is changed in the pkg.config file
{{=<% %>=}}
    { overlay, [
                %% this will act as the home directory
                %% NOTE: this is used in the init.script, so if you change it
                %% here you should change it there
                {mkdir, "slash/var/run/{{package_service_name}}"},

                %% this will act as the log directory
                %% NOTE: if you change it you also change in config/sys.config
                {mkdir, "slash/var/log/{{package_service_name}}"},

                %% standard places for init scripts
                %% here's our actual init script
                {template, "priv/init.script", "slash/etc/init.d/{{package_service_name}}"},
                {chmod, 8#00755, "slash/etc/init.d/{{package_service_name}}"},

                %% semi standard place for system level config
                {template, "config/vm.args", "slash/etc/{{package_service_name}}/vm.args"},
                {template, "config/sys.config", "slash/etc/{{package_service_name}}/sys.config"},

                %% place for an admin script (replaces erlstart-* commands)
                {template, "priv/admin.script", "slash/usr/bin/{{package_service_name}}-admin"},
                {chmod, 8#00755, "slash/usr/bin/{{package_service_name}}-admin"},

                %% supervisord hooks
                {template, "priv/supervisord.ini", "slash/etc/supervisord.d/{{package_service_name}}.ini"},

                %% systemd hooks
                {template, "priv/systemd.service", "slash/etc/systemd/system/{{package_service_name}}.service"},

                %% scripts for packages (will be in release but not included
                %% in package).  These are referenced in pkg.config file
                %% NOTE: changing these paths are likely to break something
                {template, "priv/pkg.config", "slash/internal/pkg.config"},
                {template, "priv/pre.sh", "slash/internal/pre.sh"},
                {template, "priv/post.sh", "slash/internal/post.sh"},
                {template, "priv/preun.sh", "slash/internal/preun.sh"},
                {template, "priv/postun.sh", "slash/internal/postun.sh"}
               ]
    },
<%={{ }}=%>
    %% package configuration, this file is in the priv directory, but releases
    %% need it somewhere else, so it is copied above.
    %% NOTE: changing this is likely to break something.
    { pkg_config, "slash/internal/pkg.config"}
  ]
}.
